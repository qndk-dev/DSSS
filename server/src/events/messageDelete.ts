import { Message, PartialMessage, EmbedBuilder, TextChannel } from 'discord.js';
import Logger from '../services/logs.js';
import { DatabaseManager } from '../database/database.js';

export default async (message: Message | PartialMessage) => {
    if (message.author?.bot) return; // –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–æ–≤
    if (!message.guild) return; // –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

    try {
        const dbManager = await DatabaseManager.getInstance();
        const settings = await dbManager.getGuildSettings(message.guild.id);
        const logChannelId = settings.log_channel_id;

        if (logChannelId) {
            const logChannel = message.guild.channels.cache.get(logChannelId) as TextChannel;
            if (logChannel && logChannel.isTextBased()) {
                const embed = new EmbedBuilder()
                    .setColor('#FF0000') // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏–π
                    .setTitle('üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ')
                    .setDescription(`**–ê–≤—Ç–æ—Ä:** ${message.author?.tag} (${message.author?.id})
**–ö–∞–Ω–∞–ª:** <#${message.channel.id}>
**–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:**
\`\`\`${message.content || '–ù–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞'}\`\`\``)
                    .setTimestamp();

                await logChannel.send({ embeds: [embed] });
                Logger.info(`–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ ${message.channel.id} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${message.guild.name}`);
            }
        }
    } catch (error) {
        Logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`);
    }
};
